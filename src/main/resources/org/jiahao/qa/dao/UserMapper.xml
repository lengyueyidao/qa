<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.jiahao.qa.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="org.jiahao.qa.pojo.User" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="usercode" property="usercode" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="headpath" property="headpath" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="registertime" property="registertime" jdbcType="TIMESTAMP" />
    <result column="lastlogintime" property="lastlogintime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, usercode, username, password, sex, address, headpath, description, registertime, 
    lastlogintime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="org.jiahao.qa.pojo.User" >
    insert into user (id, usercode, username, 
      password, sex, address, 
      headpath, description, registertime, 
      lastlogintime)
    values (#{id,jdbcType=VARCHAR}, #{usercode,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{headpath,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{registertime,jdbcType=TIMESTAMP}, 
      #{lastlogintime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.jiahao.qa.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="usercode != null" >
        usercode,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="headpath != null" >
        headpath,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="registertime != null" >
        registertime,
      </if>
      <if test="lastlogintime != null" >
        lastlogintime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="usercode != null" >
        #{usercode,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="headpath != null" >
        #{headpath,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="registertime != null" >
        #{registertime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastlogintime != null" >
        #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.jiahao.qa.pojo.User" >
    update user
    <set >
      <if test="usercode != null" >
        usercode = #{usercode,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.jiahao.qa.pojo.User" >
    update user
    set usercode = #{usercode,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      headpath = #{headpath,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      registertime = #{registertime,jdbcType=TIMESTAMP},
      lastlogintime = #{lastlogintime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByUsercodeAndPassword" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where usercode = #{usercode,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR}
  </select>
  <update id="updateLastLoginTime">
    update user
    set lastlogintime = #{lastlogintime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByUserCode" resultMap="BaseResultMap">
    select * from user where usercode = #{usercode,jdbcType=VARCHAR}
    <if test="id != null">
      and id != #{id}
    </if>
  </select>
  <update id="updatePassword">
    update user set password=#{password} where id=#{id}
  </update>
  <update id="updateHeadpath">
    update user set headpath=#{headpath} where id=#{id}
  </update>
  <select id="selectUserList" resultMap="BaseResultMap">
    select * from user
    <if test="q != null">
      where username like concat('%', #{q}, '%')
    </if>
    order by registertime desc
    limit #{startPos}, #{pageSize}
  </select>
  <select id="selectCount" resultType="int">
    select count(1) from user
    <if test="q != null">
      where username like concat('%', #{q}, '%')
    </if>
  </select>
</mapper>